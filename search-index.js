var searchIndex = {};
searchIndex['nanomsg'] = {"items":[[0,"","nanomsg",""],[1,"Endpoint","","An endpoint created for a specific socket. Each endpoint is identified\nby a unique return value that can be further passed to a shutdown\nfunction. The shutdown is done through the endpoint itself and not\nthe Socket. However, the `Endpoint` doesn't live longer than the socket\nitself. This is done through phantom lifetimes."],[1,"Socket","","A type-safe socket wrapper around nanomsg's own socket implementation. This\nprovides a safe interface for dealing with initializing the sockets, sending\nand receiving messages."],[1,"PollFd","",""],[1,"PollRequest","",""],[2,"Protocol","","Type-safe protocols that Nanomsg uses. Each socket\nis bound to a single protocol that has specific behaviour\n(such as only being able to receive messages and not send 'em)."],[12,"Req","","",0],[12,"Rep","","",0],[12,"Push","","",0],[12,"Pull","","",0],[12,"Pair","","",0],[12,"Bus","","",0],[12,"Pub","","",0],[12,"Sub","","",0],[12,"Surveyor","","",0],[12,"Respondent","","",0],[0,"result","",""],[1,"NanoError","nanomsg::result",""],[11,"description","","",1],[11,"kind","","",1],[2,"NanoErrorKind","",""],[12,"Unknown","","",2],[12,"OperationNotSupported","","",2],[12,"ProtocolNotSupported","","",2],[12,"NoBufferSpace","","",2],[12,"NetworkDown","","",2],[12,"AddressInUse","","",2],[12,"AddressNotAvailable","","",2],[12,"ConnectionRefused","","",2],[12,"OperationNowInProgress","","",2],[12,"NotSocket","","",2],[12,"AddressFamilyNotSupported","","",2],[12,"WrongProtocol","","",2],[12,"TryAgain","","",2],[12,"BadFileDescriptor","","",2],[12,"InvalidArgument","","",2],[12,"TooManyOpenFiles","","",2],[12,"BadAddress","","",2],[12,"PermisionDenied","","",2],[12,"NetworkReset","","",2],[12,"NetworkUnreachable","","",2],[12,"HostUnreachable","","",2],[12,"NotConnected","","",2],[12,"MessageTooLong","","",2],[12,"Timeout","","",2],[12,"ConnectionAbort","","",2],[12,"ConnectionReset","","",2],[12,"ProtocolNotAvailable","","",2],[12,"AlreadyConnected","","",2],[12,"SocketTypeNotSupported","","",2],[3,"last_nano_error","",""],[4,"NanoResult","",""],[10,"from_i64","","",2],[10,"from_u64","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"clone","","",2],[10,"fmt","","",2],[10,"eq","","",1],[10,"ne","","",1],[10,"new","","",1],[10,"from_nn_errno","","",1],[10,"from_error","","",1],[10,"fmt","","",1],[10,"new","nanomsg","",3],[10,"shutdown","","",3],[10,"eq","","",0],[10,"ne","","",0],[10,"fmt","","",0],[10,"can_read","","",4],[10,"can_write","","",4],[10,"new","","",5],[10,"get_fds","","",5],[10,"new","","Allocate and initialize a new Nanomsg socket which returns\na new file descriptor behind the scene. The safe interface doesn't\nexpose any of the underlying file descriptors and such.",6],[10,"new_for_device","","",6],[10,"bind","","Creating a new socket through `Socket::new` does **not**\nbind that socket to a listening state. Instead, one has to be\nexplicit in enabling the socket to listen onto a specific address.",6],[10,"connect","","",6],[10,"nb_read","","",6],[10,"nb_read_to_end","","",6],[10,"nb_write","","",6],[10,"new_pollfd","","",6],[10,"poll","","",6],[10,"device","","",6],[10,"terminate","","",6],[10,"set_linger","","",6],[10,"set_send_buffer_size","","",6],[10,"set_receive_buffer_size","","",6],[10,"set_send_timeout","","",6],[10,"set_receive_timeout","","",6],[10,"set_reconnect_interval","","",6],[10,"set_max_reconnect_interval","","",6],[10,"set_send_priority","","",6],[10,"set_receive_priority","","",6],[10,"set_ipv4_only","","",6],[10,"set_socket_name","","",6],[10,"set_tcp_nodelay","","",6],[10,"subscribe","","",6],[10,"unsubscribe","","",6],[10,"set_survey_deadline","","",6],[10,"set_request_resend_interval","","",6],[10,"read","","",6],[10,"read_to_end","","",6],[10,"read_at_least","","",6],[10,"write","","",6],[10,"drop","","",6]],"paths":[[2,"Protocol"],[1,"NanoError"],[2,"NanoErrorKind"],[1,"Endpoint"],[1,"PollFd"],[1,"PollRequest"],[1,"Socket"]]};
searchIndex['libnanomsg'] = {"items":[[0,"","libnanomsg",""],[1,"nn_pollfd","",""],[3,"nn_socket","","\"Creates an SP socket with specified domain and protocol. Returns\na file descriptor for the newly created socket.\""],[3,"nn_close","","\"Closes the socket s. Any buffered inbound messages that were not yet received\nby the application will be discarded. The library will try to deliver\nany outstanding outbound messages for the time specified by NN_LINGER socket\noption. The call will block in the meantime.\""],[3,"nn_setsockopt","","\"Sets the value of the option. The level argument specifies the protocol level\nat which the option resides. For generic socket-level options use NN_SOL_SOCKET\nlevel. For socket-type-specific options use socket type for level argument\n(e.g. NN_SUB). For transport-specific options use ID of the transport as\nthe level argument (e.g. NN_TCP)."],[3,"nn_getsockopt","","\"Retrieves the value for the option. The level argument specifies the protocol\nlevel at which the option resides. For generic socket-level options use NN_SOL_SOCKET\nlevel. For socket-type-specific options use socket type for level argument\n(e.g. NN_SUB). For transport-specific options use ID of the transport as the\nlevel argument (e.g. NN_TCP)."],[3,"nn_bind","","\"Adds a local endpoint to the socket s. The endpoint can be then used by other\napplications to connect to. The addr argument consists of two parts as follows:\ntransport://address. The transport specifies the underlying transport protocol\nto use. The meaning of the address part is specific to the underlying transport\nprotocol.\""],[3,"nn_connect","","\"Adds a remote endpoint to the socket s. The library would then try to connect to the\nspecified remote endpoint. The addr argument consists of two parts as follows:\ntransport://address. The transport specifies the underlying transport protocol to use.\nThe meaning of the address part is specific to the underlying transport protocol.\""],[3,"nn_shutdown","","\"Removes an endpoint from socket s. how parameter specifies the ID of the endpoint to\nremove as returned by prior call to nn_bind(3) or nn_connect(3). nn_shutdown() call\nwill return immediately, however, the library will try to deliver any outstanding\noutbound messages to the endpoint for the time specified by NN_LINGER socket option.\""],[3,"nn_send","","\"The function will send a message containing the data from buffer pointed to by buf\nparameter to the socket s. The message will be len bytes long. Alternatively, to send\na buffer allocated by nn_allocmsg(3) function set the buf parameter to point to the\npointer to the buffer and len parameter to NN_MSG constant. In this case a successful\ncall to nn_send will deallocate the buffer. Trying to deallocate it afterwards will\nresult in undefined behaviour."],[3,"nn_recv","","\"Receive a message from the socket s and store it in the buffer referenced by the buf\nargument. Any bytes exceeding the length specified by the len argument will be truncated."],[3,"nn_sendmsg","","http://nanomsg.org/v0.4/nn_sendmsg.3.html"],[3,"nn_recvmsg","","http://nanomsg.org/v0.4/nn_recvmsg.3.html"],[3,"nn_allocmsg","","http://nanomsg.org/v0.4/nn_allocmsg.3.html"],[3,"nn_reallocmsg","","http://nanomsg.org/v0.4/nn_reallocmsg.3.html"],[3,"nn_freemsg","","http://nanomsg.org/v0.4/nn_freemsg.3.html"],[3,"nn_poll","","http://nanomsg.org/v0.4/nn_poll.3.html"],[3,"nn_errno","","http://nanomsg.org/v0.4/nn_errno.3.html"],[3,"nn_strerror","","http://nanomsg.org/v0.4/nn_strerror.3.html"],[3,"nn_term","","http://nanomsg.org/v0.4/nn_term.3.html"],[3,"nn_device","","http://nanomsg.org/v0.4/nn_device.3.html"],[18,"NN_HAUSNUMERO","",""],[18,"EACCESS","",""],[18,"AF_SP","",""],[18,"AF_SP_RAW","",""],[18,"NN_PROTO_PIPELINE","",""],[18,"NN_PUSH","",""],[18,"NN_PULL","",""],[18,"NN_MSG","",""],[18,"NN_PROTO_REQREP","",""],[18,"NN_REQ","",""],[18,"NN_REP","",""],[18,"NN_REQ_RESEND_IVL","",""],[18,"NN_PROTO_PAIR","",""],[18,"NN_PAIR","",""],[18,"NN_PROTO_BUS","",""],[18,"NN_BUS","",""],[18,"NN_PROTO_PUBSUB","",""],[18,"NN_PUB","",""],[18,"NN_SUB","",""],[18,"NN_SUB_SUBSCRIBE","",""],[18,"NN_SUB_UNSUBSCRIBE","",""],[18,"NN_PROTO_SURVEY","",""],[18,"NN_SURVEYOR","",""],[18,"NN_RESPONDENT","",""],[18,"NN_SURVEYOR_DEADLINE","",""],[18,"NN_SOCKADDR_MAX","",""],[18,"NN_SOL_SOCKET","",""],[18,"NN_LINGER","",""],[18,"NN_SNDBUF","",""],[18,"NN_RCVBUF","",""],[18,"NN_SNDTIMEO","",""],[18,"NN_RCVTIMEO","",""],[18,"NN_RECONNECT_IVL","",""],[18,"NN_RECONNECT_IVL_MAX","",""],[18,"NN_SNDPRIO","",""],[18,"NN_RCVPRIO","",""],[18,"NN_SNDFD","",""],[18,"NN_RCVFD","",""],[18,"NN_DOMAIN","",""],[18,"NN_PROTOCOL","",""],[18,"NN_IPV4ONLY","",""],[18,"NN_SOCKET_NAME","",""],[18,"NN_DONTWAIT","",""],[18,"NN_TCP","",""],[18,"NN_TCP_NODELAY","",""],[18,"NN_POLLIN","",""],[18,"NN_POLLOUT","",""],[18,"NN_POLL_IN_AND_OUT","",""],[18,"ETERM","",""],[18,"EFSM","",""],[10,"new","","",0],[10,"pollin_result","","",0],[10,"pollout_result","","",0]],"paths":[[1,"nn_pollfd"]]};

searchIndex['link-config'] = {"items":[[0,"","link-config",""],[3,"plugin_registrar","",""]],"paths":[]};

initSearch(searchIndex);
